{"version":3,"sources":["./src/app/components/sensores/sensores.component.html","./src/app/components/sensores/sensores.component.ts","./src/environments/environment.ts","./src/app/components/mapa/mapa.component.ts","./src/app/components/mapa/mapa.component.html","./src/app/services/ros/ros.service.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/components/camaras/camaras.component.html","./src/app/components/camaras/camaras.component.ts","./src/app/components/navbar/navbar.component.html","./src/app/components/navbar/navbar.component.ts","./src/app/components/main-page/main-page.component.ts","./src/app/components/main-page/main-page.component.html","./src/app/services/files/files.service.ts","./src/app/app-routing.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["<button mat-button [disabled]=\"rosStatus!=1\" color=\"accent\" (click)=\"onStartClick()\">Start</button>\n<button mat-button color=\"primary\" (click)=\"onStopClick()\">Detener</button>\n<ul>\n    <li *ngFor=\"let sensor of sensorsList; index as i\">{{sensor.name}} - topic: {{sensor.topic}} - <div id=\"s{{i}}\">\n            S{{i}}</div>\n    </li>\n</ul>","import { AfterViewInit, Component, ElementRef, OnInit, ViewChild } from '@angular/core';\nimport { SensorInterface } from 'src/app/interfaces/sensors/sensor-interface';\nimport { FilesService } from 'src/app/services/files/files.service';\nimport { RosService } from 'src/app/services/ros/ros.service';\ndeclare const ROSLIB: any;\n\n@Component({\n  selector: 'app-sensores',\n  templateUrl: './sensores.component.html',\n  styleUrls: ['./sensores.component.css']\n})\nexport class SensoresComponent implements OnInit {\n  sensors: SensorInterface[];\n  sensorsList: SensorInterface[] = [];\n  listeners: any[] = [];\n  rosStatus;\n  constructor(\n    private rosService: RosService,\n    private filesService: FilesService,\n  ) {\n\n  }\n\n  ngOnInit(): void {\n    // Read config.json configurations sensor\n    this.subscribeRosStatus();\n    let config = this.filesService.openConfigFile();\n    this.sensors = config.sensors;\n    // this.subscribeToTopic();\n    (this.rosService.roStatus) ? this.rosStatus = 1 : this.rosStatus = 0;\n    if (this.rosStatus == 1) {\n      this.subscribeToTopic();\n    }\n  }\n\n  subscribeToTopic() {\n    this.onStopClick();\n    this.sensorsList = [];\n    this.listeners = [];\n    this.sensors.forEach((element: SensorInterface) => {\n      if (element.enable) {\n        this.sensorsList.push(element);\n        let listener = new ROSLIB.Topic({\n          ros: this.rosService.ros,\n          name: element.topic,\n          messageType: element.msgType\n        })\n        this.listeners.push(listener);\n      } else {\n        console.log(element.name + \" is disabled\")\n      }\n    });\n    console.log(\"Setting up \" + this.listeners.length + \" listener\")\n    this.listeners.forEach((listener, index) => {\n      listener.subscribe(function (message) {\n        document.getElementById(\"s\" + index).innerHTML = JSON.stringify(message);\n      });\n    });\n\n    // document.getElementById(\"my_image\").src = \"data:image/jpg;base64,\" + message.data;\n  }\n\n  onStartClick() {\n    this.subscribeToTopic();\n  }\n\n  onStopClick() {\n    this.listeners.forEach(listener => {\n      console.log(\"Stopping listener: \" + listener.name);\n      listener.unsubscribe();\n    })\n    this.listeners = [];\n  }\n\n  subscribeRosStatus() {\n    this.rosService.rosStatus.subscribe(status => {\n      switch (status) {\n        case 0:\n          console.log(\"No conectado\")\n          if (this.rosStatus == 2) {\n            this.rosStatus = 2;\n          } else {\n            this.rosStatus = 0;\n          }\n          break;\n        case 1:\n          console.log(\"Conectado a ROS 1\")\n          this.rosStatus = 1\n          break;\n        case 2:\n          console.log(\"No se pudo conectar con ROS 1\")\n          this.rosStatus = 2\n          break;\n\n        default:\n          break;\n      }\n    })\n  }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-mapa',\n  templateUrl: './mapa.component.html',\n  styleUrls: ['./mapa.component.css']\n})\nexport class MapaComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>mapa works!</p>\n","import { Output } from '@angular/core';\nimport { Injectable, EventEmitter } from '@angular/core';\n\ndeclare const ROSLIB: any;\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RosService {\n  // 0: not connected | 1: connected | 2: error\n  ros;\n  @Output() rosStatus = new EventEmitter();\n  public roStatus: number = 0;\n\n  constructor() { }\n\n  connectROS1 = () => {\n    //TODO: Disable button\n    this.ros = new ROSLIB.Ros({\n      url: 'ws://localhost:9090'\n    })\n\n    this.ros.on('connection', () => {\n      console.log('Connected to websocket server.');\n      this.rosStatus.emit(1);\n      this.roStatus = 1;\n      //TODO: Disable button\n    });\n\n    this.ros.on('error', (error) => {\n      console.log('Error connecting to websocket server: ', error);\n      this.rosStatus.emit(2);\n      this.roStatus = 2;\n      //TODO: Enable button\n    });\n\n    this.ros.on('close', () => {\n      console.log('Connection to websocket server closed.');\n      this.rosStatus.emit(0)\n      this.roStatus = 0;\n      //TODO: Enable button\n    });\n  }\n}\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'webpage-angular';\n}\n","<app-navbar></app-navbar>\n<router-outlet></router-outlet>","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { MainPageComponent } from './components/main-page/main-page.component';\nimport { NavbarComponent } from './components/navbar/navbar.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatButtonModule } from '@angular/material/button';\nimport { CamarasComponent } from './components/camaras/camaras.component';\nimport { SensoresComponent } from './components/sensores/sensores.component';\nimport { MapaComponent } from './components/mapa/mapa.component';\nimport { MatGridListModule } from '@angular/material/grid-list';\nimport { FlexLayoutModule } from '@angular/flex-layout';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    MainPageComponent,\n    NavbarComponent,\n    CamarasComponent,\n    SensoresComponent,\n    MapaComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    \n    FlexLayoutModule,\n    \n    MatToolbarModule,\n    MatIconModule,\n    MatButtonModule,\n    MatGridListModule,\n    \n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","<button mat-button [disabled]=\"rosStatus!=1\" color=\"accent\" (click)=\"onStartClick()\">Start</button>\n<button mat-button color=\"primary\" (click)=\"onStopClick()\">Detener</button>\n\n<mat-grid-list cols=\"2\" rowHeight=\"1:1\">\n    <mat-grid-tile *ngFor=\"let camera of camerasList; index as i\">\n        <div fxLayout=\"column\">\n            <p>{{camera.name}}</p>\n            <p>{{camera.topic}}</p>\n            <img id=\"camera{{i}}\" style='min-height: 200px; max-width: 100%; object-fit: contain'\n                src=\"./../../../assets/no-image.jpg\">\n        </div>\n    </mat-grid-tile>\n</mat-grid-list>\n\n<!-- <ul>\n    <li *ngFor=\"let camera of camerasList; index as i\">{{camera.name}} - topic: {{camera.topic}} -\n        <img id=\"camera{{i}}\" style='min-height: 200px; max-width: 50%; object-fit: contain'\n            src=\"./../../../assets/no-image.jpg\">\n    </li>\n</ul> -->","import { Component, OnInit } from '@angular/core';\nimport { CameraInterface } from 'src/app/interfaces/cameras/camera-interface';\nimport { FilesService } from 'src/app/services/files/files.service';\nimport { RosService } from 'src/app/services/ros/ros.service';\ndeclare const ROSLIB: any;\n\n@Component({\n  selector: 'app-camaras',\n  templateUrl: './camaras.component.html',\n  styleUrls: ['./camaras.component.css']\n})\nexport class CamarasComponent implements OnInit {\n  cameras: CameraInterface[];\n  camerasList: CameraInterface[] = [];\n  listeners: any[] = [];\n  rosStatus;\n  constructor(\n    private rosService: RosService,\n    private filesService: FilesService,\n  ) {\n\n  }\n\n  ngOnInit(): void {\n    this.subscribeRosStatus();\n    let config = this.filesService.openConfigFile();\n    this.cameras = config.cameras;\n    (this.rosService.roStatus) ? this.rosStatus = 1 : this.rosStatus = 0;\n    if (this.rosStatus == 1) {\n      this.subscribeToTopic();\n    }\n  }\n\n  subscribeToTopic(){\n    this.camerasList = [];\n    this.listeners = [];\n    this.cameras.forEach((element: CameraInterface) => {\n      if(element.enable){\n        this.camerasList.push(element);\n        let listener = new ROSLIB.Topic({\n          ros: this.rosService.ros,\n          name: element.topic,\n          messageType: element.msgType\n        })\n        this.listeners.push(listener);\n      } else {\n        console.log(element.name + \" is disabled\");\n      }\n    });\n    console.log(\"Setting up \" + this.listeners.length + \" listener\")\n    this.listeners.forEach((listener, index) => {\n      listener.subscribe(function (message) {\n        // document.getElementById(\"my_image\").src = \"data:image/jpg;base64,\" + message.data;\n        let image = document.getElementById(\"camera\" + index) as HTMLImageElement;\n        image.src = \"data:image/jpg;base64,\" + message.data;\n      });\n    });\n  }\n\n  onStartClick() {\n    this.subscribeToTopic();\n  }\n\n  onStopClick() {\n    this.listeners.forEach(listener => {\n      console.log(\"Stopping listener: \" + listener.name);\n      listener.unsubscribe();\n    })\n    this.listeners = [];\n  }\n\n  subscribeRosStatus() {\n    this.rosService.rosStatus.subscribe(status => {\n      switch (status) {\n        case 0:\n          console.log(\"No conectado\")\n          if (this.rosStatus == 2) {\n            this.rosStatus = 2;\n          } else {\n            this.rosStatus = 0;\n          }\n          break;\n        case 1:\n          console.log(\"Conectado a ROS 1\")\n          this.rosStatus = 1\n          break;\n        case 2:\n          console.log(\"No se pudo conectar con ROS 1\")\n          this.rosStatus = 2\n          break;\n\n        default:\n          break;\n      }\n    })\n  }\n\n}\n","<mat-toolbar>\n    <!-- <button mat-icon-button class=\"example-icon\" aria-label=\"Example icon-button with menu icon\">\n        <mat-icon>menu</mat-icon>\n    </button> -->\n    <mat-toolbar-row>\n        <span>Tatacoa URC</span>\n        <span class=\"example-spacer\"></span>\n        <button [routerLink]=\"['/home']\" mat-button aria-label=\"Example icon-button with heart icon\">\n            Home\n        </button>\n        <button [routerLink]=\"['/cameras']\" mat-button aria-label=\"Example icon-button with share icon\">\n            Cámara\n        </button>\n        <button [routerLink]=\"['/sensors']\" mat-button aria-label=\"Example icon-button with share icon\">\n            Sensores\n        </button>\n        <button [routerLink]=\"['/map']\" mat-button aria-label=\"Example icon-button with share icon\">\n            Mapa\n        </button>\n    </mat-toolbar-row>\n    <mat-toolbar-row>\n        <span>Conexión a ROS 1</span>\n        <span class=\"example-spacer\"></span>\n        <mat-icon *ngIf=\"rosStatus==0\">mobiledata_off</mat-icon>\n        <mat-icon *ngIf=\"rosStatus==1\">done</mat-icon>\n        <mat-icon *ngIf=\"rosStatus==2\">warning</mat-icon>\n        <button mat-button (click)=\"onConnectROS1()\" class=\"example-icon favorite-icon\" aria-label=\"Example icon-button with heart icon\">\n            Conectar ROS 1\n        </button>\n    </mat-toolbar-row>\n</mat-toolbar>","import { Component, OnInit } from '@angular/core';\nimport { RosService } from 'src/app/services/ros/ros.service';\n\n@Component({\n  selector: 'app-navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.css']\n})\nexport class NavbarComponent implements OnInit {\n  data;\n  rosStatus = 0;\n  constructor(\n    private rosService: RosService\n  ) {\n    this.subscribeRosStatus();\n  }\n\n  ngOnInit(): void {\n    let requestJSON = new XMLHttpRequest();\n    requestJSON.open(\"GET\", './../../assets/config.json', false);\n    requestJSON.send(null);\n    this.data = JSON.parse(requestJSON.responseText)\n  }\n\n  onConnectROS1(){\n    console.log(\"onConnectROS1\");\n    this.rosService.connectROS1();\n  }\n\n  subscribeRosStatus(){\n    this.rosService.rosStatus.subscribe(status=>{\n      switch (status) {\n        case 0:\n          console.log(\"No conectado\")\n          if(this.rosStatus==2){\n            this.rosStatus = 2;\n          }else{\n            this.rosStatus = 0;\n          }\n          break;\n        case 1:\n          console.log(\"Conectado a ROS 1\")\n          this.rosStatus = 1\n          break;\n        case 2:\n          console.log(\"No se pudo conectar con ROS 1\")\n          this.rosStatus = 2\n          break;\n      \n        default:\n          break;\n      }\n    })\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\nimport { RosService } from 'src/app/services/ros/ros.service';\ndeclare const ROSLIB: any;\n\n@Component({\n  selector: 'app-main-page',\n  templateUrl: './main-page.component.html',\n  styleUrls: ['./main-page.component.css']\n})\nexport class MainPageComponent implements OnInit {\n  ros;\n  rosConnected: boolean = false;\n  constructor(\n    private rosService: RosService\n  ) {\n    this.subscribeRosStatus();\n  }\n\n  ngOnInit(): void {\n    (this.rosService.roStatus) ? this.rosConnected = true : this.rosConnected = false;\n  }\n\n  forward = () => {\n    this.ros = this.rosService.ros;\n    console.log(\"Foward\")\n    var cmdVel = new ROSLIB.Topic({\n      ros: this.ros,\n      name: 'turtle1/cmd_vel',\n      messageType: 'geometry_msgs/Twist'\n    });\n\n    var twist = new ROSLIB.Message({\n      linear: {\n        x: 2.0,\n        y: 0.0,\n        z: 0.0\n      },\n      angular: {\n        x: 0.0,\n        y: 0.0,\n        z: 0.0\n      }\n    });\n    console.log(\"Publishing cmd_vel\")\n    cmdVel.publish(twist);\n  }\n\n  left = () => {\n    this.ros = this.rosService.ros;\n    console.log(\"Left\");\n    var cmdVel = new ROSLIB.Topic({\n      ros: this.ros,\n      name: 'turtle1/cmd_vel',\n      messageType: 'geometry_msgs/Twist'\n    });\n\n    var twist = new ROSLIB.Message({\n      linear: {\n        x: 0.0,\n        y: 0.0,\n        z: 0.0\n      },\n      angular: {\n        x: 0.0,\n        y: 0.0,\n        z: 1.8\n      }\n    });\n    console.log(\"Publishing cmd_vel\")\n    cmdVel.publish(twist);\n  }\n\n  right = () => {\n    this.ros = this.rosService.ros;\n    console.log(\"Right\");\n    var cmdVel = new ROSLIB.Topic({\n      ros: this.ros,\n      name: 'turtle1/cmd_vel',\n      messageType: 'geometry_msgs/Twist'\n    });\n\n    var twist = new ROSLIB.Message({\n      linear: {\n        x: 0.0,\n        y: 0.0,\n        z: 0.0\n      },\n      angular: {\n        x: 0.0,\n        y: 0.0,\n        z: -1.8\n      }\n    });\n    console.log(\"Publishing cmd_vel\")\n    cmdVel.publish(twist);\n  }\n\n  reverse = () => {\n    this.ros = this.rosService.ros;\n    console.log(\"Reverse\");\n    var cmdVel = new ROSLIB.Topic({\n      ros: this.ros,\n      name: 'turtle1/cmd_vel',\n      messageType: 'geometry_msgs/Twist'\n    });\n\n    var twist = new ROSLIB.Message({\n      linear: {\n        x: -2.0,\n        y: 0.0,\n        z: 0.0\n      },\n      angular: {\n        x: 0.0,\n        y: 0.0,\n        z: 0.0\n      }\n    });\n    console.log(\"Publishing cmd_vel\")\n    cmdVel.publish(twist);\n  }\n\n  subscribeRosStatus(){\n    this.rosService.rosStatus.subscribe(status=>{\n      switch (status) {\n        case 0:\n          console.log(\"No conectado\")\n          this.rosConnected = false;\n          break;\n        case 1:\n          console.log(\"Conectado a ROS 1\")\n          this.rosConnected = true;\n          break;\n        case 2:\n          console.log(\"No se pudo conectar con ROS 1\")\n          this.rosConnected = false;\n          break;\n      \n        default:\n          break;\n      }\n    })\n  }\n}\n","<table>\n    <tr>\n        <th></th>\n        <th><button [disabled]=\"!rosConnected\" mat-stroked-button type=\"button\" class=\"btn btn-success\" (click)=\"forward()\">Adelante</button></th>\n        <th></th>\n    </tr>\n    <tr>\n        <th><button [disabled]=\"!rosConnected\" mat-stroked-button type=\"button\" class=\"btn btn-success\" (click)=\"left()\">Izquierda</button></th>\n        <th></th>\n        <th><button [disabled]=\"!rosConnected\" mat-stroked-button type=\"button\" class=\"btn btn-success\" (click)=\"right()\">Derecha</button></th>\n    </tr>\n    <tr>\n        <th></th>\n        <th><button [disabled]=\"!rosConnected\" mat-stroked-button type=\"button\" class=\"btn btn-success\" (click)=\"reverse()\">Reverse</button></th>\n        <th></th>\n    </tr>\n</table>","import { Injectable } from '@angular/core';\nimport { SensorInterface } from 'src/app/interfaces/sensors/sensor-interface';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class FilesService {\n\n  constructor() { }\n\n  openConfigFile() {\n    let requestJSON = new XMLHttpRequest();\n    requestJSON.open(\"GET\", \"./../../../../assets/config.json\", false);\n    requestJSON.send(null);\n    let data = JSON.parse(requestJSON.responseText);\n    return data;\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { CamarasComponent } from './components/camaras/camaras.component';\nimport { MainPageComponent } from './components/main-page/main-page.component';\nimport { MapaComponent } from './components/mapa/mapa.component';\nimport { SensoresComponent } from './components/sensores/sensores.component';\n\nconst routes: Routes = [\n  {path: 'home', component: MainPageComponent},\n  {path: 'cameras', component: CamarasComponent},\n  {path: 'sensors', component: SensoresComponent},\n  {path: 'map', component: MapaComponent},\n  {path: '', redirectTo: '/home', pathMatch: 'full'}\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}